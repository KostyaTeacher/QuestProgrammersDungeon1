from flask import Flask, request, jsonify, render_template_string, redirect

app = Flask(__name__)

correct_answers = {
    "stage_1": 1,
    "stage_2": 0,
    "stage_3": "Hello World",
    "stage_4": 2,
    "stage_5": 1
}

info_message = {
    "stage_1": """
    –ï—Ç–∞–ø 1: –ó–∞–≥–∞–¥–∫–æ–≤–∏–π –ø–æ—Ä—Ç–∞–ª
    –ù–∞ —Å–∞–º–æ–º—É –ø–æ—á–∞—Ç–∫—É –ø—Ä–∏–≥–æ–¥–∏ –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∏–∫–∞—î—Ç—å—Å—è –∑ –≤–µ–ª–∏–∫–∏–º –∫–∞–º'—è–Ω–∏–º –ø–æ—Ä—Ç–∞–ª–æ–º, 
    —è–∫–∏–π –±–ª–æ–∫—É–≤–∞–≤ —à–ª—è—Ö —É –º–∞–≥—ñ—á–Ω–∏–π –ª—ñ—Å. 
    –©–æ–± –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –ø–æ—Ä—Ç–∞–ª, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–Ω–∞–π—Ç–∏ "–º–∞–≥—ñ—á–Ω–∏–π –∫–æ–¥" 
    —ñ –≤–∏–∫–æ–Ω–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é XOR –Ω–∞ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ —á–∏—Å–µ–ª, —è–∫—ñ –∑–∞—Ö–æ–≤–∞–Ω—ñ –≤ –∑–∞–≥–∞–¥–∫–∞—Ö.      
    """,
    "stage_2": """–ï—Ç–∞–ø 2: "–ú–æ—Å—Ç–∏ –µ–ª—å—Ñ—ñ–≤" –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ –ª—ñ—Å —ñ –Ω–∞—Ç—Ä–∞–ø–ª—è—î –Ω–∞ —Ç—Ä–∏ –º–æ—Å—Ç–∏, 
    –∫–æ–∂–µ–Ω –∑ —è–∫–∏—Ö –≤–µ–¥–µ –¥–æ —Ä—ñ–∑–Ω–æ–≥–æ –Ω–∞–ø—Ä—è–º–∫—É. –ü–µ—Ä—à–∏–π –º—ñ—Å—Ç –≤–∏–≥–ª—è–¥–∞—î —Å—Ç–∞—Ä–∏–º —ñ –≤–∫—Ä–∏—Ç–∏–π –º–æ—Ö–æ–º, –¥—Ä—É–≥–∏–π ‚Äî 
    –∑—Ä–æ–±–ª–µ–Ω–∏–π —ñ–∑ –±–ª–∏—Å–∫—É—á–æ–≥–æ –º–µ—Ç–∞–ª—É, –∞ —Ç—Ä–µ—Ç—ñ–π ‚Äî –¥–µ—Ä–µ–≤'—è–Ω–∏–π —ñ —Å–∫—Ä–∏–ø—É—á–∏–π. –û–¥–∏–Ω —ñ–∑ –º–æ—Å—Ç—ñ–≤ –±–µ–∑–ø–µ—á–Ω–∏–π, 
    –∞ –¥–≤–∞ —ñ–Ω—à–∏—Ö –≤–µ–¥—É—Ç—å –¥–æ –æ—Ä–∫—ñ–≤, —è–∫—ñ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç—è—Ç—å –¥–∞–ª—ñ –±–µ–∑ –±–æ—é.""",
    "stage_3": """–ö–æ–º–∞–Ω–¥–∞ –ø–æ—Ç—Ä–∞–ø–ª—è—î –¥–æ –ø–µ—á–µ—Ä–∏, –¥–µ –≥–Ω–æ–º–∏ –∑–∞—Ö–æ–≤–∞–ª–∏ –¥–∞–≤–Ω—ñ–π –∫—Ä–∏—Å—Ç–∞–ª –º—É–¥—Ä–æ—Å—Ç—ñ, 
    —è–∫–∏–π –¥–∞—î —Å–∏–ª—É –±–∞—á–∏—Ç–∏ –ø—Ä–∏—Ö–æ–≤–∞–Ω–µ. –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—Ä–∏—Å—Ç–∞–ª, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –±—É–ª–æ –∑–∞–∫–æ–¥–æ–≤–∞–Ω–µ.
    –ù–∞–ø–∏—Å—å –Ω–∞ —Å–∫–µ–ª—ñ: Khoor Zruog""",
    "stage_4": """–ï—Ç–∞–ø 4: "–ú–∞–≥—ñ—á–Ω–∏–π –ª–∞–±—ñ—Ä–∏–Ω—Ç –æ—Ä–∫—ñ–≤" –û—Ä–∫–∏ –∑–∞—Ö–æ–≤–∞–ª–∏ –∫–ª—é—á –≤—ñ–¥ —Ñ–æ—Ä—Ç–µ—Ü—ñ —É –º–∞–≥—ñ—á–Ω–æ–º—É –ª–∞–±—ñ—Ä–∏–Ω—Ç—ñ, —è–∫–∏–π –º–æ–∂–Ω–∞ 
    –ø–æ–¥–æ–ª–∞—Ç–∏, –ª–∏—à–µ –≤–∏—Ä—ñ—à–∏–≤—à–∏ –∑–∞–≥–∞–¥–∫—É. –õ–∞–±—ñ—Ä–∏–Ω—Ç –∑–∞–ø–ª—É—Ç–∞–Ω–∏–π —ñ –Ω–∞–ø–æ–≤–Ω–µ–Ω–∏–π —ñ–ª—é–∑—ñ—è–º–∏, —â–æ –∑–±–∏–≤–∞—é—Ç—å –∑ –ø–∞–Ω—Ç–µ–ª–∏–∫—É –Ω–∞–≤—ñ—Ç—å 
    –Ω–∞–π—Å–º—ñ–ª–∏–≤—ñ—à–∏—Ö –≥–µ—Ä–æ—ó–≤. –ô–æ–≥–æ —Å—Ç—ñ–Ω–∏ –ø–æ—Å—Ç—ñ–π–Ω–æ –∑–º—ñ–Ω—é—é—Ç—å —Å–≤–æ—î —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è, –∞ –¥–≤–µ—Ä—ñ –≤—ñ–¥–∫—Ä–∏–≤–∞—é—Ç—å—Å—è –ª–∏—à–µ –∑–∞ —É–º–æ–≤–∏ 
    –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –≥–æ–ª–æ–≤–æ–ª–æ–º–æ–∫.""",
    "stage_5": """–ï—Ç–∞–ø 5: "üóùÔ∏è –¢—Ä–∏ –º–∞–≥—ñ—á–Ω—ñ —Å–∫—Ä–∏–Ω—ñ" –£ —Ñ–æ—Ä—Ç–µ—Ü—ñ –æ—Ä–∫—ñ–≤ –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è —Ç—Ä–∏ –º–∞–≥—ñ—á–Ω—ñ —Å–∫—Ä–∏–Ω—ñ, 
    –æ–¥–Ω–∞ –∑ —è–∫–∏—Ö –º—ñ—Å—Ç–∏—Ç—å üëë. –ö–æ–∂–Ω–∞ —Å–∫—Ä–∏–Ω—è –º–∞—î –Ω–∞–ø–∏—Å, –∞–ª–µ –ª–∏—à–µ –æ–¥–∏–Ω –∑ –Ω–∞–ø–∏—Å—ñ–≤ –≥–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–∞–≤–¥—É. –ó–∞–≤–¥–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ ‚Äî 
    –∑–Ω–∞–π—Ç–∏ —Å–∫—Ä–∏–Ω—é –∑ üëë, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –ª–æ–≥—ñ—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –Ω–∞–ø–∏—Å—ñ–≤."""
}

info_message_task = {
    "stage_1": """–ü—ñ–¥–∫–∞–∑–∫–∞:
    –ì–Ω–æ–º–∏ –∑–Ω–∞–π—à–ª–∏ –¥–∞–≤–Ω—ñ–π —Å—É–≤—ñ–π, –¥–µ –æ–ø–∏—Å–∞–Ω–æ, —è–∫ –ø—Ä–∞—Ü—é—î XOR. –í–≤–æ–¥–∏—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ª–∏—à–µ –æ–¥–Ω–µ —á–∏—Å–ª–æ
    3, 5, 7""",
    "stage_2": """–ü—ñ–¥–∫–∞–∑–∫–∞: –£–≤–∞–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –Ω–∞–ø–∏—Å–∏ –Ω–∞ —Å—Ç–∞—Ä–æ–≤–∏–Ω–Ω–∏—Ö —Ç–∞–±–ª–∏—á–∫–∞—Ö ‚Äî 
    –≤–æ–Ω–∏ –º—ñ—Å—Ç—è—Ç—å –ø—ñ–¥–∫–∞–∑–∫–∏, —â–æ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –æ–±—Ä–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º—ñ—Å—Ç.
    bridge_signs = ["–±–µ–∑–ø–µ–∫–∞", "–Ω–µ–±–µ–∑–ø–µ–∫–∞", "–Ω–µ–±–µ–∑–ø–µ–∫–∞"]""",
    "stage_3": """–ü—ñ–¥–∫–∞–∑–∫–∞: –ì–∞–π –Æ–ª—ñ–π. offset=3, ASCII: 65 """,
    "stage_4": """doors = ["–∑–∞—á–∏–Ω–µ–Ω–æ", "–∑–∞—á–∏–Ω–µ–Ω–æ", "–≤—ñ–¥—á–∏–Ω–µ–Ω–æ", "–∑–∞—á–∏–Ω–µ–Ω–æ", "–∑–∞—á–∏–Ω–µ–Ω–æ", "–≤—ñ–¥—á–∏–Ω–µ–Ω–æ"]
    """,
    "stage_5": """–ü—ñ–¥–∫–∞–∑–∫–∞: –õ–∏—à–µ –æ–¥–∏–Ω –Ω–∞–ø–∏—Å –≥–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–∞–≤–¥—É, –∞ —Ä–µ—à—Ç–∞ ‚Äî –±—Ä–µ—Ö–Ω—è.
     –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –ª–æ–≥—ñ—á–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è.
     chests = ["üëë —Ç—É—Ç", "üëë –Ω–µ —Ç—É—Ç", "üëë –Ω–µ –≤ –ø–µ—Ä—à—ñ–π —Å–∫—Ä–∏–Ω—ñ"]"""
}

final_scene = """–ü—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ –≤—Å—ñ –ø–µ—Ä–µ—à–∫–æ–¥–∏ –ø–æ–¥–æ–ª–∞–Ω—ñ, –∞ –¥–≤–µ—Ä—ñ –≤—ñ–¥–∫—Ä–∏—Ç—ñ, –∫–æ–º–∞–Ω–¥–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –∫–æ—Ä–æ–Ω—É —ñ –ø–æ–≤–µ—Ä—Ç–∞—î 
—ó—ó –¥–æ –°—Ç–∞—Ä–æ–≥–æ –ö–æ—Ä–æ–ª—ñ–≤—Å—Ç–≤–∞. –õ—é–¥–∏ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å –≥–µ—Ä–æ—ó–≤ –∑ —Ä–∞–¥—ñ—Å—Ç—é, –≤–ª–∞—à—Ç–æ–≤—É—é—á–∏ –≤–µ–ª–∏–∫–µ —Å–≤—è—Ç–∫—É–≤–∞–Ω–Ω—è –Ω–∞ 
—á–µ—Å—Ç—å —ó—Ö–Ω—å–æ–≥–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è. –ì–Ω–æ–º–∏, —è–∫—ñ –¥–æ–ø–æ–º–∞–≥–∞–ª–∏ –≤ –¥–æ—Ä–æ–∑—ñ, –≤—ñ–¥—á—É–≤–∞—é—Ç—å –≥–æ—Ä–¥—ñ—Å—Ç—å –∑–∞ —Å–≤–æ—é –º—É–¥—Ä—ñ—Å—Ç—å —ñ —Å–º—ñ–ª–∏–≤—ñ—Å—Ç—å, 
–∞ –æ—Ä–∫–∏, —É—Å–≤—ñ–¥–æ–º–∏–≤—à–∏ —Ü—ñ–Ω–Ω—ñ—Å—Ç—å —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ, –æ–±—ñ—Ü—è—é—Ç—å –±—ñ–ª—å—à–µ –Ω–µ –∑–∞–≤–∞–∂–∞—Ç–∏ —ñ–Ω—à–∏–º –Ω–∞—Ä–æ–¥–∞–º. –£—Å—ñ –º–µ—à–∫–∞–Ω—Ü—ñ –°—Ç–∞—Ä–æ–≥–æ –ö–æ—Ä–æ–ª—ñ–≤—Å—Ç–≤–∞ 
–æ–±'—î–¥–Ω—É—é—Ç—å—Å—è –Ω–∞–≤–∫–æ–ª–æ –∫–æ—Ä–æ–Ω–∏, —â–æ–± —Ä–∞–∑–æ–º –±—É–¥—É–≤–∞—Ç–∏ –º–∏—Ä–Ω–µ –º–∞–π–±—É—Ç–Ω—î. –ù–∞–≤—ñ—Ç—å –∫–æ–ª–∏—à–Ω—ñ –≤–æ—Ä–æ–≥–∏ —Ç–∏—Å–Ω—É—Ç—å –æ–¥–∏–Ω –æ–¥–Ω–æ–º—É —Ä—É–∫–∏, 
—É—Å–≤—ñ–¥–æ–º–ª—é—é—á–∏, —â–æ —Ç—ñ–ª—å–∫–∏ —Ä–∞–∑–æ–º –≤–æ–Ω–∏ –º–æ–∂—É—Ç—å –ø–æ–¥–æ–ª–∞—Ç–∏ –±—É–¥—å-—è–∫—ñ —Ç—Ä—É–¥–Ω–æ—â—ñ. –õ—é–¥–∏, –≥–Ω–æ–º–∏ —Ç–∞ –Ω–∞–≤—ñ—Ç—å –æ—Ä–∫–∏ –≤–∏—Ä—ñ—à—É—é—Ç—å –±—ñ–ª—å—à–µ 
–Ω–µ —Å–≤–∞—Ä–∏—Ç–∏—Å—è —Ç–∞ –∂–∏—Ç–∏ –≤ –º–∏—Ä—ñ, –∞–¥–∂–µ —Ç–µ–ø–µ—Ä –≤–æ–Ω–∏ –∑–Ω–∞—é—Ç—å, —â–æ —Å–ø—ñ–≤–ø—Ä–∞—Ü—è ‚Äî –Ω–∞–π–∫—Ä–∞—â–∞ –º–∞–≥—ñ—è."""

losse_scene = """–ù–∞–∂–∞–ª—å –≤–∏ –≤—Ç—Ä–∞—á–∞—î—Ç–µ –æ–¥–Ω–æ–≥–æ –∑ —É—á–∞—Å–Ω–∏–∫—ñ–≤. –û–±–µ—Ä—ñ—Ç—å —Ö—Ç–æ —Ü–µ –±—É–¥–µ —Ü—å–æ–≥–æ —Ä–∞–∑—É"""

start_message = """–î–∞–≤–Ω–∏–º-–¥–∞–≤–Ω–æ, –∫–æ–ª–∏ –ª—é–¥–∏, –≥–Ω–æ–º–∏ —Ç–∞ –æ—Ä–∫–∏ —â–µ —Å–ø—ñ–≤—ñ—Å–Ω—É–≤–∞–ª–∏ —Ä–∞–∑–æ–º –Ω–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –°—Ç–∞—Ä–æ–≥–æ –ö–æ—Ä–æ–ª—ñ–≤—Å—Ç–≤–∞, 
–Ω–∞—Å—Ç–∞–ª–∞ –≤–µ–ª–∏–∫–∞ –±—ñ–¥–∞: –∫–æ—Ä–æ–Ω—É –º–∞–≥—ñ—á–Ω–æ–≥–æ –∫–æ—Ä–æ–ª—è –±—É–ª–æ –≤–∫—Ä–∞–¥–µ–Ω–æ –æ—Ä–∫–∞–º–∏-–∑–ª–æ–¥—ñ—è–º–∏. –ö–æ—Ä–æ–Ω–∞ –¥–∞–≤–∞–ª–∞ –ª—é–¥—è–º —ñ 
–≥–Ω–æ–º–∞–º –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –º–∏—Ä–Ω–æ —Å–ø—ñ–≤—ñ—Å–Ω—É–≤–∞—Ç–∏, –¥–∞—Ä—É—é—á–∏ –¥–æ–±—Ä–æ–±—É—Ç —ñ –º–∞–≥—ñ—á–Ω—É —Å–∏–ª—É –≤—Å—ñ–º, —Ö—Ç–æ —ó—ó –æ—Ö–æ—Ä–æ–Ω—è—î. 
–Ü —Ç–µ–ø–µ—Ä —Ç—Ä–∏ –∫–æ–º–∞–Ω–¥–∏ –≤—ñ–¥–≤–∞–∂–Ω–∏—Ö –≥–µ—Ä–æ—ó–≤ ‚Äî –≥–Ω–æ–º–∏, –æ—Ä–∫–∏ —Ç–∞ –ª—é–¥–∏ ‚Äî –ø–æ–≤–∏–Ω–Ω—ñ –ø—Ä–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –º–∞–≥—ñ—á–Ω–∏–π –ª—ñ—Å, 
–ø–æ–¥–æ–ª–∞—Ç–∏ –ø–µ—Ä–µ—à–∫–æ–¥–∏ –π —Ä–æ–∑–≤'—è–∑–∞—Ç–∏ —Å–∫–ª–∞–¥–Ω—ñ –∑–∞–≥–∞–¥–∫–∏, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–æ—Ä–æ–Ω—É —ñ –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ –º–∏—Ä
"""

HTML_TEMPLATE = """
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>–ö—Ä—ñ–∑—å –º–∞–≥—ñ—á–Ω–∏–π –ª—ñ—Å</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f8ff;
            color: #333;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            background: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 500px;
        }
        h1 {
            color: #007bff;
        }
        .message {
            font-size: 1.2em;
            margin-top: 20px;
        }
        .correct {
            color: #28a745;
        }
        .incorrect {
            color: #dc3545;
        }
        form {
            margin-top: 20px;
        }
        input[type="text"] {
            padding: 10px;
            font-size: 1em;
            width: 80%;
            margin-bottom: 10px;
        }
        input[type="submit"] {
            padding: 10px 20px;
            font-size: 1em;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #0056b3;
        }
        .info {
            margin-top: 10px;
            font-style: italic;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>–ö—Ä—ñ–∑—å –ú–∞–≥—ñ—á–Ω–∏–π –õ—ñ—Å</h1>
        <div class="info">
            {{ info_message }} <br>
            <b>{{ info_message_task }}</b>
        </div>
        <img src="{{ image_path }}" alt="Stage Image" width="100%">
        <div class="message {{ message_class }}">
            {{ result_message }}
        </div>
        <form method="post">
            <input type="text" name="answer" placeholder="Enter your answer here" required>
            <input type="submit" value="Submit">
        </form>
    </div>
</body>
</html>
"""

HTML_TEMPLATE_START = """
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>–ö—Ä—ñ–∑—å –º–∞–≥—ñ—á–Ω–∏–π –ª—ñ—Å</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f8ff;
            color: #333;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            background: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 500px;
        }
        h1 {
            color: #007bff;
        }
        .message {
            font-size: 1.2em;
            margin-top: 20px;
        }
        .correct {
            color: #28a745;
        }
        .incorrect {
            color: #dc3545;
        }
        form {
            margin-top: 20px;
        }
        input[type="text"] {
            padding: 10px;
            font-size: 1em;
            width: 80%;
            margin-bottom: 10px;
        }
        input[type="submit"] {
            padding: 10px 20px;
            font-size: 1em;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #0056b3;
        }
        .info {
            margin-top: 10px;
            font-style: italic;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>–ö—Ä—ñ–∑—å –ú–∞–≥—ñ—á–Ω–∏–π –õ—ñ—Å</h1>
        <div class="info">
            {{ info_message }} <br>
            <b>{{ info_message_task }}</b>
        </div>
        <img src="{{ image_path }}" alt="Stage Image" width="100%">
        <div class="message {{ message_class }}">
            {{ result_message }}
        </div>
       <form action="/stage_1" method="get">
            <input type="submit" value="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ 1 –µ—Ç–∞–ø">
        </form>
    </div>
</body>
</html>
"""

HTML_TEMPLATE_LOOSE = """
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>–ö—Ä—ñ–∑—å –º–∞–≥—ñ—á–Ω–∏–π –ª—ñ—Å</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f8ff;
            color: #333;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            background: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 500px;
        }
        h1 {
            color: #007bff;
        }
        .message {
            font-size: 1.2em;
            margin-top: 20px;
        }
        .correct {
            color: #28a745;
        }
        .incorrect {
            color: #dc3545;
        }
        form {
            margin-top: 20px;
        }
        input[type="text"] {
            padding: 10px;
            font-size: 1em;
            width: 80%;
            margin-bottom: 10px;
        }
        input[type="submit"] {
            padding: 10px 20px;
            font-size: 1em;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #0056b3;
        }
        .info {
            margin-top: 10px;
            font-style: italic;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>–ö—Ä—ñ–∑—å –ú–∞–≥—ñ—á–Ω–∏–π –õ—ñ—Å</h1>
        <div class="info">
            {{ info_message }} <br>
            <b>{{ info_message_task }}</b>
        </div>
        <img src="{{ image_path }}" alt="Stage Image" width="100%">
        <div class="message {{ message_class }}">
            {{ result_message }}
        </div>
         <form action="{{ request.path }}" method="get">
            <input type="submit" value="–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥">
        </form>
    </div>
</body>
</html>
"""

@app.route("/")
def start():
    return render_template_string(HTML_TEMPLATE_START, result_message="", message_class="",
                                  info_message=start_message,
                                  info_message_task="",
                                  image_path="/static/images/start.webp")

@app.route('/stage_1', methods=['GET', 'POST'])
def stage_1():
    if request.method == 'GET':
        return render_template_string(HTML_TEMPLATE, result_message="", message_class="",
                                      info_message=info_message.get("stage_1"),
                                      info_message_task=info_message_task.get("stage_1"),
                                      image_path="/static/images/1stage.webp")
    user_answer = int(request.form.get('answer'))
    if user_answer == correct_answers['stage_1']:
        return redirect('/stage_2')
    return render_template_string(HTML_TEMPLATE_LOOSE, result_message="Incorrect. Try again. üò¢", message_class="incorrect",
                                  info_message=losse_scene,
                                  info_message_task="",
                                  image_path="/static/images/losse.webp"), 400


@app.route('/stage_2', methods=['GET', 'POST'])
def stage_2():
    if request.method == 'GET':
        return render_template_string(HTML_TEMPLATE, result_message="", message_class="",
                                      info_message=info_message.get("stage_2"),
                                      info_message_task=info_message_task.get("stage_2"),
                                      image_path="/static/images/2stage.webp")
    user_answer = int(request.form.get('answer'))
    if user_answer == correct_answers['stage_2']:
        return redirect('/stage_3')
    return render_template_string(HTML_TEMPLATE_LOOSE, result_message="Incorrect. Try again. üò¢", message_class="incorrect",
                                  info_message="–í–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ –æ–¥–Ω–æ–≥–æ —á–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑",
                                  info_message_task="",
                                  image_path="/static/images/losse.webp"), 400


@app.route('/stage_3', methods=['GET', 'POST'])
def stage_3():
    if request.method == 'GET':
        return render_template_string(HTML_TEMPLATE, result_message="", message_class="",
                                      info_message=info_message.get("stage_3"),
                                      info_message_task=info_message_task.get("stage_3"),
                                      image_path="/static/images/3stage.webp")
    user_answer = str(request.form.get('answer'))
    if user_answer == correct_answers['stage_3']:
        return redirect('/stage_4')
    return render_template_string(HTML_TEMPLATE_LOOSE, result_message="Incorrect. The guards block your way. üò¢",
                                  message_class="incorrect",
                                  info_message="–í–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ –æ–¥–Ω–æ–≥–æ —á–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑",
                                  info_message_task="",
                                  image_path="/static/images/losse.webp"), 400


@app.route('/stage_4', methods=['GET', 'POST'])
def stage_4():
    if request.method == 'GET':
        return render_template_string(HTML_TEMPLATE, result_message="", message_class="",
                                      info_message=info_message.get("stage_4"),
                                      info_message_task=info_message_task.get("stage_4"),
                                      image_path="/static/images/4stage.webp")
    user_answer = int(request.form.get('answer'))
    if user_answer == correct_answers['stage_4']:
        return redirect('/stage_5')
    return render_template_string(HTML_TEMPLATE_LOOSE, result_message="Incorrect. You are sent back to the start of the labyrinth. üò¢",
                                  message_class="incorrect",
                                  info_message="–í–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ –æ–¥–Ω–æ–≥–æ —á–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑",
                                  info_message_task="",
                                  image_path="/static/images/losse.webp"), 400

@app.route('/stage_5', methods=['GET', 'POST'])
def stage_5():
    if request.method == 'GET':
        return render_template_string(HTML_TEMPLATE, result_message="", message_class="",
                                      info_message=info_message.get("stage_5"),
                                      info_message_task=info_message_task.get("stage_5"),
                                      image_path="/static/images/5stage.webp")
    user_answer = int(request.form.get('answer'))
    if user_answer == correct_answers['stage_5']:
        return redirect('/final')
    return render_template_string(HTML_TEMPLATE_LOOSE,
                                  result_message="Incorrect. The chest is empty. üò¢",
                                  message_class="incorrect",
                                  info_message="–í–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ –æ–¥–Ω–æ–≥–æ —á–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑",
                                  info_message_task="",
                                  image_path="/static/images/losse.webp"), 400

@app.route('/final')
def stage_6():
    return render_template_string(HTML_TEMPLATE, result_message="You win!",
                                  message_class="correct",
                                  info_message=final_scene,
                                  info_message_task="",
                                  image_path="/static/images/end.webp"), 200

if __name__ == '__main__':
    app.run(port=30000, debug=True)
